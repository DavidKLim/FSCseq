// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// M_step
Rcpp::List M_step(arma::mat X, arma::vec y_j, int p, int j, int a, int k, arma::mat all_wts, arma::vec keep, arma::vec offset, arma::mat theta, arma::vec coefs_j, arma::vec phi_j, int cl_phi, int est_covar, double lambda, double alpha, double IRLS_tol, int maxit_IRLS);
RcppExport SEXP _FSCseq_M_step(SEXP XSEXP, SEXP y_jSEXP, SEXP pSEXP, SEXP jSEXP, SEXP aSEXP, SEXP kSEXP, SEXP all_wtsSEXP, SEXP keepSEXP, SEXP offsetSEXP, SEXP thetaSEXP, SEXP coefs_jSEXP, SEXP phi_jSEXP, SEXP cl_phiSEXP, SEXP est_covarSEXP, SEXP lambdaSEXP, SEXP alphaSEXP, SEXP IRLS_tolSEXP, SEXP maxit_IRLSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y_j(y_jSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< int >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type all_wts(all_wtsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type keep(keepSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type offset(offsetSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type coefs_j(coefs_jSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type phi_j(phi_jSEXP);
    Rcpp::traits::input_parameter< int >::type cl_phi(cl_phiSEXP);
    Rcpp::traits::input_parameter< int >::type est_covar(est_covarSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type IRLS_tol(IRLS_tolSEXP);
    Rcpp::traits::input_parameter< int >::type maxit_IRLS(maxit_IRLSSEXP);
    rcpp_result_gen = Rcpp::wrap(M_step(X, y_j, p, j, a, k, all_wts, keep, offset, theta, coefs_j, phi_j, cl_phi, est_covar, lambda, alpha, IRLS_tol, maxit_IRLS));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_FSCseq_M_step", (DL_FUNC) &_FSCseq_M_step, 18},
    {NULL, NULL, 0}
};

RcppExport void R_init_FSCseq(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
